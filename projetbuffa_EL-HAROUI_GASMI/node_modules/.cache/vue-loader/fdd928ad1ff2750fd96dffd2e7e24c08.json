{"remainingRequest":"C:\\Users\\root\\Desktop\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\root\\Desktop\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\root\\Desktop\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\root\\Desktop\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\src\\components\\Restaurants.vue?vue&type=template&id=a3a00054&scoped=true&","dependencies":[{"path":"C:\\Users\\root\\Desktop\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\src\\components\\Restaurants.vue","mtime":1578856889621},{"path":"C:\\Users\\root\\Desktop\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\root\\Desktop\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\root\\Desktop\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\root\\Desktop\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}