{"remainingRequest":"C:\\Users\\Zakaria\\Documents\\VueProjet\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Zakaria\\Documents\\VueProjet\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Zakaria\\Documents\\VueProjet\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Zakaria\\Documents\\VueProjet\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\src\\components\\Restaurants.vue?vue&type=template&id=a3a00054&scoped=true&","dependencies":[{"path":"C:\\Users\\Zakaria\\Documents\\VueProjet\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\src\\components\\Restaurants.vue","mtime":1579000701164},{"path":"C:\\Users\\Zakaria\\Documents\\VueProjet\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579000684962},{"path":"C:\\Users\\Zakaria\\Documents\\VueProjet\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1579000698960},{"path":"C:\\Users\\Zakaria\\Documents\\VueProjet\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579000684962},{"path":"C:\\Users\\Zakaria\\Documents\\VueProjet\\Projet-Cartes-pour-des-restaurants\\projetbuffa_EL-HAROUI_GASMI\\node_modules\\vue-loader\\lib\\index.js","mtime":1579000698959}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}